"""Data migration loading ingredient data.

### NOTE ###

This migration only loads records from the SR Legacy Foods dataset.
"""
# Generated by Django 4.1.3 on 2022-11-28 21:10
import csv
import io
import os
from typing import List, Union

from django.conf import settings
from django.db import migrations
from util import open_or_pass


def parse_food_csv(
    ingredient_model,
    file: Union[str, os.PathLike, io.IOBase],
    source_filter: List[str] = None,
) -> None:
    """Load ingredient data from the Foods csv file.

    Parameters
    ----------
    ingredient_model
        The class implementing the ingredient model.
    file
        File or path to the file containing nutrient data.
    source_filter
        List of data sources. If not None only records from listed
        sources will be saved.

    Notes
    -----
    Data sources include:
        'branded_food', 'experimental_food', 'sr_legacy_food',
        'sample_food', 'market_acquistion', 'sub_sample_food',
        'foundation_food', 'agricultural_acquisition',
        'survey_fndds_food'
    """
    ingredient_list = []
    with open_or_pass(file, newline="") as f:
        if source_filter is not None:
            source_filter = set(source_filter)

        reader = csv.DictReader(f)
        for record in reader:

            # Filtering data sources
            if (
                source_filter is not None
                and record.get("data_type") not in source_filter
            ):
                continue

            ingredient = ingredient_model()
            ingredient.fdc_id = int(record["fdc_id"])
            ingredient.name = record["description"]
            ingredient.dataset = record["data_type"]

            ingredient_list.append(ingredient)

    ingredient_model.objects.bulk_create(ingredient_list)


def parse_ingredients(apps, _):
    """Load data from food csv (SR Legacy Food only)"""
    Ingredient = apps.get_model("main", "Ingredient")
    parse_food_csv(Ingredient, settings.FOOD_FILE, source_filter=["sr_legacy_food"])


class Migration(migrations.Migration):

    dependencies = [
        ("main", "0004_rename_ingredientnutrients_ingredientnutrient_and_more"),
    ]

    operations = [migrations.RunPython(parse_ingredients)]
